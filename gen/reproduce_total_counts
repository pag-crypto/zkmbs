#!/usr/bin/env bash

file=$(mktemp)
progress() { pc=0;
  while [ -e $file ]
    do
      echo -ne "$pc sec\033[0K\r"
      sleep 1
      ((pc++))
    done
}


output_file="column_total.txt"
> $output_file


circuit_list=("ChannelBaseline" "ChannelShortcut" "Channel0RTT" "ChannelAmortized" "ChannelAmortized_ChaCha" "Firewall_HS" "DNS_Amortized_ChaCha" "DNS_Amortized_doh_get" "ODOH_Amortized")

if  [[ $1 = "-nobaseline" ]]; then
	circuit_list=("ChannelShortcut" "Channel0RTT" "ChannelAmortized" "ChannelAmortized_ChaCha" "Firewall_HS" "DNS_Amortized_ChaCha" "DNS_Amortized_doh_get" "ODOH_Amortized")
fi


for i in ${!circuit_list[@]};
do
	ckt=${circuit_list[$i]}
	packagename=""
	if [ ${ckt::1} == 'O' ] 
	then
		packagename="e2eODOH"
	elif [ ${ckt::1} == 'D' ] 
	then
		packagename="e2eDNS"
	elif [ ${ckt::1} == 'C' ] 
	then
		packagename="channel_openings"
	elif [ ${ckt::1} == 'F' ] 
	then
		packagename="e2eFirewall"
	fi

	optimized=true
	# if [[ "$ckt" == "ChannelBaseline" ]]
	if [[ $ckt == ChannelBaseline || $ckt == DNS_Amortized_doh_get ]]
	then
		optimized=false
	fi

	fullname="$packagename.$ckt"
	
	file=$(mktemp)
	echo "Generating circuit $ckt..." 
	progress &

	java -Xmx16g -cp bin:xjsnark_backend.jar xjsnark.$fullname > logs/${ckt}_circuit.txt
	rm -f $file

	if [[ $optimized == true ]]
	then
		num_con="$(grep  "after  " logs/${ckt}_circuit.txt | awk '{print $NF}')"
	else 
		num_con="$(grep  "Total Number of Constraints" logs/${ckt}_circuit.txt | awk '{print $NF}')"
	fi


	num_con_div=$(echo "scale = 2; $num_con/10000.0" | bc)
	printf "Number of constraints of circuit $ckt: %4.1f\n" $num_con_div
	printf "%-25s" $ckt >> $output_file
	printf "%8.1f\n" $num_con_div >> $output_file
	# printf "%.2e\n" $num_con >> all_sizes.txt
	# printf "$ckt:\t %.2e\n" $num_con >> all_sizes.txt
	# echo "$ckt: $num_con" >> all_sizes.txt
done


